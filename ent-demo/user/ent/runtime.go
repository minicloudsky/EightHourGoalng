// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/minicloudsky/golang-in-action/ent-demo/user/ent/car"
	"github.com/minicloudsky/golang-in-action/ent-demo/user/ent/group"
	"github.com/minicloudsky/golang-in-action/ent-demo/user/ent/pet"
	"github.com/minicloudsky/golang-in-action/ent-demo/user/ent/schema"
	"github.com/minicloudsky/golang-in-action/ent-demo/user/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	carMixin := schema.Car{}.Mixin()
	carMixinFields0 := carMixin[0].Fields()
	_ = carMixinFields0
	carFields := schema.Car{}.Fields()
	_ = carFields
	// carDescCreateTime is the schema descriptor for create_time field.
	carDescCreateTime := carMixinFields0[0].Descriptor()
	// car.DefaultCreateTime holds the default value on creation for the create_time field.
	car.DefaultCreateTime = carDescCreateTime.Default.(func() time.Time)
	// carDescUpdateTime is the schema descriptor for update_time field.
	carDescUpdateTime := carMixinFields0[1].Descriptor()
	// car.DefaultUpdateTime holds the default value on creation for the update_time field.
	car.DefaultUpdateTime = carDescUpdateTime.Default.(func() time.Time)
	// car.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	car.UpdateDefaultUpdateTime = carDescUpdateTime.UpdateDefault.(func() time.Time)
	groupMixin := schema.Group{}.Mixin()
	groupMixinFields0 := groupMixin[0].Fields()
	_ = groupMixinFields0
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescCreateTime is the schema descriptor for create_time field.
	groupDescCreateTime := groupMixinFields0[0].Descriptor()
	// group.DefaultCreateTime holds the default value on creation for the create_time field.
	group.DefaultCreateTime = groupDescCreateTime.Default.(func() time.Time)
	// groupDescUpdateTime is the schema descriptor for update_time field.
	groupDescUpdateTime := groupMixinFields0[1].Descriptor()
	// group.DefaultUpdateTime holds the default value on creation for the update_time field.
	group.DefaultUpdateTime = groupDescUpdateTime.Default.(func() time.Time)
	// group.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	group.UpdateDefaultUpdateTime = groupDescUpdateTime.UpdateDefault.(func() time.Time)
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[0].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	petMixin := schema.Pet{}.Mixin()
	petMixinFields0 := petMixin[0].Fields()
	_ = petMixinFields0
	petFields := schema.Pet{}.Fields()
	_ = petFields
	// petDescAge is the schema descriptor for age field.
	petDescAge := petMixinFields0[0].Descriptor()
	// pet.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	pet.AgeValidator = petDescAge.Validators[0].(func(int) error)
	// petDescName is the schema descriptor for name field.
	petDescName := petMixinFields0[1].Descriptor()
	// pet.NameValidator is a validator for the "name" field. It is called by the builders before save.
	pet.NameValidator = petDescName.Validators[0].(func(string) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[0].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userMixinFields0[1].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
	// userDescAge is the schema descriptor for age field.
	userDescAge := userFields[0].Descriptor()
	// user.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	user.AgeValidator = userDescAge.Validators[0].(func(int) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
}
